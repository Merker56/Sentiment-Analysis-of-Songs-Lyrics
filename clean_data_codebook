{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"clean_data_codebook","provenance":[],"collapsed_sections":["2ShMsw2FqClZ","pJRcnNUUITIw"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"r7WWwE7j9THl","colab_type":"text"},"source":["# **Import Data and Clean-Up**"]},{"cell_type":"code","metadata":{"id":"OM_3Jeunnnna","colab_type":"code","outputId":"e6c4713a-2363-4f78-865a-d02ba796c618","executionInfo":{"status":"ok","timestamp":1574101796488,"user_tz":-60,"elapsed":855,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Mount a drive\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":67,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZkQ8KlrmkVpJ","colab_type":"code","outputId":"6b5ccabb-9e76-42c7-8089-d86bf8696f9e","executionInfo":{"status":"ok","timestamp":1574101800411,"user_tz":-60,"elapsed":4763,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["# Import libraries\n","import pickle\n","import numpy as np\n","import pandas as pd\n","import random\n","from collections import Counter\n","from scipy import stats\n","import matplotlib.pyplot as plt\n","import seaborn\n","\n","# NLP libraries\n","! pip install langid\n","import langid # Language Identification (LangID) tool\n","import nltk, re, pprint\n","from nltk import word_tokenize\n","nltk.download('punkt')\n","\n","# Set seed\n","random.seed(8)"],"execution_count":68,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: langid in /usr/local/lib/python3.6/dist-packages (1.1.6)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from langid) (1.17.4)\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ofEdJaXLJmKP","colab_type":"text"},"source":["## Import data"]},{"cell_type":"code","metadata":{"id":"U9PR61iqkwFg","colab_type":"code","colab":{}},"source":["# Path to the file MoodyLyrics4Q_raw.pkl\n","path_moody = \"/content/drive/My Drive/Fall 2019/W266/Project/1_ground_truth/MoodyLyrics4Q_raw.pkl\"\n","\n","# Unpickle the dataset in pandas dataframe\n","data_moody = pd.read_pickle(path_moody)\n","\n","# Path to the file MER_raw.pkl\n","path_mer = \"/content/drive/My Drive/Fall 2019/W266/Project/1_ground_truth/MER_raw.pkl\"\n","\n","# Unpickle the dataset in pandas dataframe\n","data_mer = pd.read_pickle(path_mer)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"2ShMsw2FqClZ"},"source":["## EDA"]},{"cell_type":"markdown","metadata":{"id":"j5cW4BWr-HR-","colab_type":"text"},"source":["### MoodyLyrics4Q"]},{"cell_type":"code","metadata":{"id":"RmKYKdhiKGx8","colab_type":"code","outputId":"a3caeffb-1508-4ef2-a6b7-61a2977ef365","executionInfo":{"status":"ok","timestamp":1574101800651,"user_tz":-60,"elapsed":4982,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["# Show a sample\n","data_moody.sample(10, random_state=8)"],"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1859</th>\n","      <td>1860</td>\n","      <td>Gil Scott-Heron</td>\n","      <td>Whitey On The Moon</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>A rat done bit my sister Nell\\nWith Whitey on ...</td>\n","    </tr>\n","    <tr>\n","      <th>1059</th>\n","      <td>1060</td>\n","      <td>The Tokens</td>\n","      <td>The Lion Sleeps Tonight</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>(A-wimoweh, a-wimoweh, a-wimoweh, a-wimoweh)\\n...</td>\n","    </tr>\n","    <tr>\n","      <th>114</th>\n","      <td>115</td>\n","      <td>The Rolling Stones</td>\n","      <td>Coming Down Again</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Coming down again, coming down again \\nComing ...</td>\n","    </tr>\n","    <tr>\n","      <th>791</th>\n","      <td>792</td>\n","      <td>Cocteau Twins</td>\n","      <td>Wolf in the Breast</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Under my shirt, Have to amass\\nSling the taint...</td>\n","    </tr>\n","    <tr>\n","      <th>1813</th>\n","      <td>1814</td>\n","      <td>The Presidents of the United States of America</td>\n","      <td>Lump</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Lump sat alone in a boggy marsh\\nTotally motio...</td>\n","    </tr>\n","    <tr>\n","      <th>340</th>\n","      <td>341</td>\n","      <td>Slayer</td>\n","      <td>Sex. Murder. Art.</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>Caught\\nNow You're Mine\\nI am the master of yo...</td>\n","    </tr>\n","    <tr>\n","      <th>1187</th>\n","      <td>1188</td>\n","      <td>Teddy Geiger</td>\n","      <td>Gentlemen</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>I was blinded by the lights I saw reflecting i...</td>\n","    </tr>\n","    <tr>\n","      <th>644</th>\n","      <td>645</td>\n","      <td>Röyksopp</td>\n","      <td>Dead to the World</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>In the dead of the night you seem closer to me...</td>\n","    </tr>\n","    <tr>\n","      <th>753</th>\n","      <td>754</td>\n","      <td>Flowing Tears</td>\n","      <td>Lovesong For A Dead Child</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Deep down the line,\\nSleep save my child\\nTrai...</td>\n","    </tr>\n","    <tr>\n","      <th>1734</th>\n","      <td>1735</td>\n","      <td>NOFX</td>\n","      <td>Murder The Government</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>I wanna see the constitution burn \\nWanna watc...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      ml_index  ...                                             lyrics\n","1859      1860  ...  A rat done bit my sister Nell\\nWith Whitey on ...\n","1059      1060  ...  (A-wimoweh, a-wimoweh, a-wimoweh, a-wimoweh)\\n...\n","114        115  ...  Coming down again, coming down again \\nComing ...\n","791        792  ...  Under my shirt, Have to amass\\nSling the taint...\n","1813      1814  ...  Lump sat alone in a boggy marsh\\nTotally motio...\n","340        341  ...  Caught\\nNow You're Mine\\nI am the master of yo...\n","1187      1188  ...  I was blinded by the lights I saw reflecting i...\n","644        645  ...  In the dead of the night you seem closer to me...\n","753        754  ...  Deep down the line,\\nSleep save my child\\nTrai...\n","1734      1735  ...  I wanna see the constitution burn \\nWanna watc...\n","\n","[10 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"6hktZIxPnXXN","colab_type":"code","outputId":"27263081-8e87-4a99-f331-d80e5a26d2b4","executionInfo":{"status":"ok","timestamp":1574101800653,"user_tz":-60,"elapsed":4975,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["# Print artist, title and lyrics of a song by index\n","index = 961\n","print(\"Artist:\", data_moody['artist'][index], \"\\nTitle:\", data_moody['title'][index], \"\\nMood:\", data_moody['mood'][index])\n","print(data_moody['lyrics'][index])"],"execution_count":71,"outputs":[{"output_type":"stream","text":["Artist: M83 \n","Title: Carresses \n","Mood: relaxed\n","何を恐がっているの。[What are you being scared about?]\n","\n","I am sorry, gentleman... and lady. But it will be best for you to stay here tonight.\n","\n","Come now my good man, you can't frighten us.  We've been over your foul roads before.\n","\n","Please, you do not understand, it is not the roads, it is the darkness! Here our doors are protected with bat thorns.\n","\n","What is all this bat thorn business? \n","\n","It keeps them out. They're afraid of it, the demons of the castle. \n","\n","Good evening. It's a lovely even-- [cough] --ning. \n","\n","Well Doctor, for one who is not afraid of the dark, you have been pushing your horse pretty fast.\n","\n","Well, you know horses - one they get started for home there is no stopping them.  Oh, I admit, I was a bit impatient... I mean, hungry for one of your wonderful meals. \n","\n","Yes. (echo) The vampires are hungry too for theirs.\n","\n","[Nervous laughter] Nonsense. Rubbish. Vampires. Nonsense. I won't keep you waiting. I'll be right out for my supper. \n","\n","-- Transcript from ``Mark of the Vampire\", 1935\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4aeJ0vNz8yJ8","colab_type":"text"},"source":["#### Needs editing\n","Known issues in MoodyLyrics that might need to be addressed before working with the data ([index] Example):\n","\n","- [0]End of line: '\\n'\n","- [0]End of paragraph: '\\n\\n'\n","- [0]Repeated letter: 'C-c-c-c-come'\n","- [0]Text between parenthesis as the lyrics of a second voice: '(Let's do it)', '(Can we do it?)'\n","- [73][226][308]...[1887] do not have lyrics but the message \"Unfortunately, we are not licensed to display the full lyrics for this song at the moment. Hopefully we will be able to in the future. Until then... how about a random page?\"\n","- [1999]Open parentheses but no closing one\n","- [519] Instructions how to sing between parentheses: '(repeated lots of times to the fade out)'\n","- [568]Text between parenthesis, with the name of one of the artist ending with ':'(Fabolous:)', '(Black Buddafly:)'. Same in [768], without ':' for the chorus: '(Chorus)' and others [1637] '(Airline Attendant)'\n","- [568] Missing letters: ''em' as 'them', 'missin'' as 'missing'\n","- [961] It is not really a lyrics, but a text extracted from a book with music. At least, remove comments at the beginning and end.\n","- [75][89][129]....[1084][1566] Songs not in English language\n"]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"QoU1FSJ6-3zE"},"source":["### MER"]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"2a33ae7f-825e-4436-e290-eed4c4aca078","executionInfo":{"status":"ok","timestamp":1574101800654,"user_tz":-60,"elapsed":4965,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"3Nj2Hi7gB7CE","colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["# Show a sample\n","data_mer.sample(10, random_state=8)"],"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mer_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>421</th>\n","      <td>MT0006356406</td>\n","      <td>Megadeth</td>\n","      <td>Sin</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>He had an unfamiliar face \\nComplete life in d...</td>\n","    </tr>\n","    <tr>\n","      <th>219</th>\n","      <td>MT0001497786</td>\n","      <td>Cher</td>\n","      <td>Rain Rain</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Ooh Ooh Ooh\\nEverywhere I look I see rain. . ....</td>\n","    </tr>\n","    <tr>\n","      <th>509</th>\n","      <td>MT0009206381</td>\n","      <td>Bee Gees</td>\n","      <td>Love You Inside Out</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Baby, I can't figure it out\\nYour kisses taste...</td>\n","    </tr>\n","    <tr>\n","      <th>167</th>\n","      <td>MT0000950090</td>\n","      <td>Annie Lennox</td>\n","      <td>The Saddest Song I've Got</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Darling are you feeling\\nThe same thing that I...</td>\n","    </tr>\n","    <tr>\n","      <th>606</th>\n","      <td>MT0011767762</td>\n","      <td>Gene Vincent</td>\n","      <td>Be-Bop-A-Lula</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Well\\nBe-bo a lula\\nShe's my baby\\nBe-bop a lu...</td>\n","    </tr>\n","    <tr>\n","      <th>431</th>\n","      <td>MT0006795758</td>\n","      <td>DMX</td>\n","      <td>What's My Name?</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>This is the fuckin' shit I be talkin' about\\nH...</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>MT0000606812</td>\n","      <td>Daryl Hall John Oates</td>\n","      <td>Promise Ain't Enough</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Don't wanna open your heart\\nYou're afraid fro...</td>\n","    </tr>\n","    <tr>\n","      <th>185</th>\n","      <td>MT0001137053</td>\n","      <td>Joe Jackson</td>\n","      <td>Lullaby</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Shall I stay or go \\nThrough the door\\nWill th...</td>\n","    </tr>\n","    <tr>\n","      <th>244</th>\n","      <td>MT0001710592</td>\n","      <td>Cradle of Filth</td>\n","      <td>Lovesick for Mina</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>One might see in Mina\\nMy disease\\nBut it was ...</td>\n","    </tr>\n","    <tr>\n","      <th>517</th>\n","      <td>MT0009321428</td>\n","      <td>The Cure</td>\n","      <td>This Is a Lie</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>How each of us decides\\nI've never been sure\\n...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        mer_index  ...                                             lyrics\n","421  MT0006356406  ...  He had an unfamiliar face \\nComplete life in d...\n","219  MT0001497786  ...  Ooh Ooh Ooh\\nEverywhere I look I see rain. . ....\n","509  MT0009206381  ...  Baby, I can't figure it out\\nYour kisses taste...\n","167  MT0000950090  ...  Darling are you feeling\\nThe same thing that I...\n","606  MT0011767762  ...  Well\\nBe-bo a lula\\nShe's my baby\\nBe-bop a lu...\n","431  MT0006795758  ...  This is the fuckin' shit I be talkin' about\\nH...\n","111  MT0000606812  ...  Don't wanna open your heart\\nYou're afraid fro...\n","185  MT0001137053  ...  Shall I stay or go \\nThrough the door\\nWill th...\n","244  MT0001710592  ...  One might see in Mina\\nMy disease\\nBut it was ...\n","517  MT0009321428  ...  How each of us decides\\nI've never been sure\\n...\n","\n","[10 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"vuokTHSleC-b","colab_type":"code","outputId":"56753bbf-edfb-4695-cebb-f8dd4828b56c","executionInfo":{"status":"ok","timestamp":1574101800656,"user_tz":-60,"elapsed":4958,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["data_mer['artist']"],"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        Billie Holiday\n","1            Jim Reeves\n","2            Bob Marley\n","3            Perry Como\n","4               Genesis\n","             ...       \n","766     Simon Garfunkel\n","767     Sinead O'Connor\n","768    Rosemary Clooney\n","769         John Denver\n","770          Elton John\n","Name: artist, Length: 771, dtype: object"]},"metadata":{"tags":[]},"execution_count":73}]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"ba51d4c2-9fba-4d0e-f254-c66ef15ee740","executionInfo":{"status":"ok","timestamp":1574101800657,"user_tz":-60,"elapsed":4952,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"PegLRqQiC0Vs","colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["# Print artist, title and lyrics of a song by index\n","index = 766\n","print(\"Artist:\", data_mer['artist'][index], \"\\nTitle:\", data_mer['title'][index], \"\\nMood:\", data_mer['mood'][index], \"\\n\")\n","print(data_mer['lyrics'][index])"],"execution_count":74,"outputs":[{"output_type":"stream","text":["Artist: Simon Garfunkel \n","Title: April Come She Will \n","Mood: relaxed \n","\n","(P. Simon)\n","April come she will\n","When streams are ripe and swelled with rain;\n","May, she will stay,\n","Resting in my arms again.\n","\n","June, she'll change her tune,\n","In restless walks she'll prowl the night;\n","July, she will fly\n","And give no warning to her flight.\n","\n","August, die she must,\n","The autumn winds blow chilly and cold;\n","September I'll remember\n","A love once new has now grown old.\n"," \n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"uJexEKj5VQa1"},"source":["#### Needs editing\n","Known issues in MER lyrics that might need to be addressed before working with the data ([index] Example):\n","\n","- [0]End of line: '\\n'\n","- [0]End of paragraph: '\\n\\n'\n","- [0] '.' as the end of a paragraph (on top of '\\n\\n')\n","- [1] Some words in different language 'Adios amigo, adios my friend'\n","- [2]Repeated letter: 'o-oh!' or letters [7] 'floor-or-or-or'\n","- [2]Text between parenthesis as the lyrics of a second voice: '(la la-la!)', '(Can we do it?)'\n","- [4]' - ' as a comma separator between sentences\n","- [7] Expressions with no meaning per se, but express happiness and should not be elinated 'lah-de-ah-de-ay', 'Zing do da do ding do da-do-do-day'\n","- [766]Text between parenthesis, with the name of one of the artist (P. Simon)\n","- [9] Missing letters: ''cause' as 'because', or gerund 'Wakin'', 'thinkin'', 'cheatin''...\n","- [300] x3 or x4 to express a sentence is repeated 3 or 4 times\n","- Check if there are songs not in English language\n"]},{"cell_type":"markdown","metadata":{"id":"pJRcnNUUITIw","colab_type":"text"},"source":["### AZLyrics"]},{"cell_type":"markdown","metadata":{"id":"B4_YbUgBIV1O","colab_type":"text"},"source":["#### Needs more Work - Ingestion of Lyrics"]},{"cell_type":"markdown","metadata":{"id":"h8IGySCbnY5w","colab_type":"text"},"source":["This is manual process that requires specifying an artist and the song title then scraping the results. I'm going to continue research on more datasets. - JM"]},{"cell_type":"code","metadata":{"id":"gNSep0LMIbXp","colab_type":"code","colab":{}},"source":["import urllib.request\n","from bs4 import BeautifulSoup\n"," \n","def get_lyrics(artist,song_title):\n","    artist = artist.lower()\n","    song_title = song_title.lower()\n","    # remove all except alphanumeric characters from artist and song_title\n","    artist = re.sub('[^A-Za-z0-9]+', \"\", artist)\n","    song_title = re.sub('[^A-Za-z0-9]+', \"\", song_title)\n","    if artist.startswith(\"the\"):    # remove starting 'the' from artist e.g. the who -> who\n","        artist = artist[3:]\n","    url = \"http://azlyrics.com/lyrics/\"+artist+\"/\"+song_title+\".html\"\n","    \n","    try:\n","        content = urllib.request.urlopen(url).read()\n","        soup = BeautifulSoup(content, 'html.parser')\n","        lyrics = str(soup)\n","        # lyrics lies between up_partition and down_partition\n","        up_partition = '<!-- Usage of azlyrics.com content by any third-party lyrics provider is prohibited by our licensing agreement. Sorry about that. -->'\n","        down_partition = '<!-- MxM banner -->'\n","        lyrics = lyrics.split(up_partition)[1]\n","        lyrics = lyrics.split(down_partition)[0]\n","        lyrics = lyrics.replace('<br>','').replace('</br>','').replace('</div>','').strip()\n","        return lyrics\n","    except Exception as e:\n","        return \"Exception occurred \\n\" +str(e)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"pZC4rDSbqyZ7"},"source":["## Preliminary clean-up\n","We start solving some of the issues found in the EDA"]},{"cell_type":"markdown","metadata":{"id":"dV41t4qLn8qa","colab_type":"text"},"source":["### MoodyLyric dataset clean-up\n","\n","Identify mismatching parentheses, brackets and curly barckets in lyrics"]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"279c68e2-191e-44a2-beca-12fcf31ec715","executionInfo":{"status":"ok","timestamp":1574101801098,"user_tz":-60,"elapsed":5375,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"uqOtegAGOw-2","colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["def mismatch (df):\n","  \"\"\"Function to detect and display type and number of mismatching parenthesis in lyrics per song index\"\"\"\n","\n","  open_close_list = [('(', ')'), ('[', ']'), ('{', '}')]\n","\n","  for open, close in open_close_list:\n","    mismatch_index = []\n","    for index in range(df.shape[0]):\n","      counter = Counter(df['lyrics'][index])\n","      n_open = counter[open]\n","      n_close = counter[close]\n","      if n_open != n_close:\n","        mismatch_index.append(index)\n","        print(f\"[{index}]: {n_open}{open} vs {n_close}{close}\")\n","\n","# Use mismatch on data_moody\n","mismatch(data_moody)"],"execution_count":76,"outputs":[{"output_type":"stream","text":["[4]: 22( vs 26)\n","[513]: 11( vs 6)\n","[519]: 9( vs 2)\n","[1686]: 6( vs 12)\n","[1999]: 1( vs 0)\n","[270]: 1[ vs 0]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"GpASQVj3e2o3","colab_type":"text"},"source":["Solve mismatching and some issues specific for a certain lyrics"]},{"cell_type":"code","metadata":{"id":"7d8nzBAsdDe9","colab_type":"code","outputId":"d33461f4-eaf2-4607-b8a5-54e293ebe6fa","executionInfo":{"status":"ok","timestamp":1574101801100,"user_tz":-60,"elapsed":5362,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":646}},"source":["# Solve mismatching parentheses\n","data_moody['lyrics'][4] = data_moody['lyrics'][4].replace(')!', '!')\n","\n","str_513 = '(Honey, please, can\\'t you see you saved me'\n","data_moody['lyrics'][513] = data_moody['lyrics'][513].replace(str_513, str_513 + ')')\n","\n","str_519a = '(Printed lyrics show the following which is left out entirely in recording)'\n","str_519b = 'Foreign language chant (repeated lots of times to the fade out)'\n","data_moody['lyrics'][519] = data_moody['lyrics'][519].replace(str_519a, '')\n","data_moody['lyrics'][519] = data_moody['lyrics'][519].replace(str_519b, '')\n","data_moody['lyrics'][519] = data_moody['lyrics'][519].replace('(', '')\n","\n","str_961a = '何を恐がっているの。[What are you being scared about?]'\n","str_961b = '-- Transcript from ``Mark of the Vampire\", 1935'\n","\n","str_1686_rpl = ['(do) ', ')']\n","for item in str_1686_rpl:\n","  data_moody['lyrics'][1686] = data_moody['lyrics'][1686].replace(item, '')\n","\n","data_moody['lyrics'][1999] = data_moody['lyrics'][1999].replace('(', '')\n","\n","# Solve mismatching brackets\n","data_moody['lyrics'][270] = data_moody['lyrics'][270].replace('p[lace', 'place')"],"execution_count":77,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  if __name__ == '__main__':\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:10: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  # Remove the CWD from sys.path while we load stuff.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:17: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:19: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:22: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"E95TRNkcYzZH","colab_type":"text"},"source":["Remove name of the artist from lyrics"]},{"cell_type":"code","metadata":{"id":"CGniuxtJ3TRP","colab_type":"code","colab":{}},"source":["def remove_artist_from_lyrics(artist, lyrics):\n","    \"\"\"Remove all the parentheses in lyrics containing any word(token) in the artist name\n","    \n","    Args:\n","      artist : (string) name of the artist of the song\n","      lyrics : (string) lyrics of the songlist of row labels\n","      \n","    Returns:\n","      lyrics_clean: (string) lyrics without parentheses containing any word(token) in the artist name\"\"\"\n","    \n","    # conditional variable\n","    parentheses = \"(\"\n","\n","    # List of string between parentheses\n","    parentheses_string_list = []\n","\n","    # Get a copy of lyrics in lyrics_aux and remove all \"\\n\"\n","    lyrics_aux = lyrics.replace(\"\\n\", \"\")\n","\n","    # Replace \")\" with \")\\n\" to get correct strings between parentheses\n","    lyrics_aux = lyrics_aux.replace(\")\", \")\\n\")\n","\n","    while parentheses in lyrics_aux:\n","        # Get the first string between parentheses\n","        result = re.search('\\((.*)\\)', lyrics_aux)\n","        # If it is not in the list yet, include it\n","        if result.group(0) not in parentheses_string_list:\n","            parentheses_string_list.append(result.group(0))\n","        # Remove that string from lyrics\n","        lyrics_aux = lyrics_aux.replace(result.group(0), \"\")\n","\n","    # Get a list of token in artist\n","    artist_tokens = nltk.word_tokenize(artist)\n","\n","    # List of indexes in parentheses_string_list to be removed\n","    remove_me_index = []\n","\n","    # For every token in artist\n","    for token in artist_tokens:\n","        # Loop over parentheses_string_list\n","        for index in range(len(parentheses_string_list)):\n","            # If token is in parentheses_string_list\n","            if token in parentheses_string_list[index]:\n","                # Add that index in list of indexes to be removed\n","                remove_me_index.append(index)\n","\n","    # Remove every parentheses in lyrics using the index of those who contain \n","    for index in remove_me_index:\n","        lyrics = lyrics.replace(parentheses_string_list[index], \"\")\n","        # print(f\"Removed {parentheses_string_list[index]}\", sep=\", \")\n","    \n","    return lyrics"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"y9_jC6LBLb3N","colab_type":"code","outputId":"b6a9cae3-0930-4d93-90a0-2845280b2e6e","executionInfo":{"status":"ok","timestamp":1574101802265,"user_tz":-60,"elapsed":6505,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["for index in range(data_moody.shape[0]):\n","  data_moody['lyrics'][index] = remove_artist_from_lyrics(data_moody['artist'][index], data_moody['lyrics'][index])"],"execution_count":79,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"GA9dxbjC1DW3","colab_type":"code","outputId":"a3379e3e-f24f-49e1-f490-92354434980c","executionInfo":{"status":"ok","timestamp":1574101802267,"user_tz":-60,"elapsed":6494,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["# Are there 'x2', 'x3', ..., 'x 2', x 3', ...'Chorus'?\n","search_list = ['x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9','x10',\n","               'x 2', 'x 3', 'x 4', 'x 5', 'x 6', 'x 7', 'x 8', 'x 9', 'x 10',\n","               'Chorus', 'chorus', 'echo', 'Echo',\n","               'Unfortunately, we are not licensed to display']\n","\n","for index in range(data_moody.shape[0]):\n","  str = data_moody['lyrics'][index]\n","  for text in search_list:\n","    n_text = str.count(text)\n","    if n_text > 0:\n","      print(f\"[{index}]: ({text}, {n_text})\", sep=\"\")\n"],"execution_count":80,"outputs":[{"output_type":"stream","text":["[24]: (x7, 1)\n","[24]: (Chorus, 1)\n","[25]: (x 3, 1)\n","[31]: (echo, 1)\n","[43]: (chorus, 1)\n","[73]: (Unfortunately, we are not licensed to display, 1)\n","[82]: (x2, 4)\n","[95]: (x3, 1)\n","[95]: (x4, 1)\n","[118]: (echo, 1)\n","[150]: (chorus, 1)\n","[179]: (echo, 1)\n","[199]: (chorus, 1)\n","[226]: (Unfortunately, we are not licensed to display, 1)\n","[246]: (x2, 1)\n","[308]: (Unfortunately, we are not licensed to display, 1)\n","[311]: (Unfortunately, we are not licensed to display, 1)\n","[319]: (Unfortunately, we are not licensed to display, 1)\n","[361]: (Unfortunately, we are not licensed to display, 1)\n","[373]: (Unfortunately, we are not licensed to display, 1)\n","[374]: (Chorus, 1)\n","[403]: (Unfortunately, we are not licensed to display, 1)\n","[417]: (x8, 1)\n","[417]: (x 3, 1)\n","[420]: (chorus, 1)\n","[426]: (Unfortunately, we are not licensed to display, 1)\n","[428]: (Unfortunately, we are not licensed to display, 1)\n","[439]: (Unfortunately, we are not licensed to display, 1)\n","[488]: (echo, 1)\n","[494]: (echo, 2)\n","[511]: (Unfortunately, we are not licensed to display, 1)\n","[525]: (Unfortunately, we are not licensed to display, 1)\n","[529]: (echo, 1)\n","[556]: (x3, 2)\n","[583]: (Unfortunately, we are not licensed to display, 1)\n","[592]: (x 2, 1)\n","[592]: (x 3, 2)\n","[611]: (x8, 1)\n","[617]: (x2, 3)\n","[617]: (x4, 1)\n","[623]: (echo, 1)\n","[625]: (x4, 1)\n","[627]: (x2, 2)\n","[628]: (Unfortunately, we are not licensed to display, 1)\n","[643]: (Chorus, 2)\n","[661]: (x 4, 1)\n","[692]: (Unfortunately, we are not licensed to display, 1)\n","[696]: (x2, 2)\n","[717]: (x4, 3)\n","[750]: (Unfortunately, we are not licensed to display, 1)\n","[763]: (Echo, 1)\n","[768]: (Chorus, 1)\n","[798]: (Chorus, 5)\n","[817]: (Unfortunately, we are not licensed to display, 1)\n","[819]: (x2, 1)\n","[819]: (x8, 1)\n","[840]: (Unfortunately, we are not licensed to display, 1)\n","[862]: (Unfortunately, we are not licensed to display, 1)\n","[876]: (Chorus, 3)\n","[891]: (Unfortunately, we are not licensed to display, 1)\n","[893]: (Unfortunately, we are not licensed to display, 1)\n","[918]: (Unfortunately, we are not licensed to display, 1)\n","[939]: (Unfortunately, we are not licensed to display, 1)\n","[953]: (Chorus, 1)\n","[961]: (echo, 1)\n","[962]: (echo, 2)\n","[968]: (echo, 1)\n","[984]: (echo, 1)\n","[989]: (x2, 3)\n","[998]: (echo, 1)\n","[1011]: (x2, 1)\n","[1011]: (x 6, 1)\n","[1049]: (x4, 1)\n","[1053]: (Unfortunately, we are not licensed to display, 1)\n","[1063]: (Unfortunately, we are not licensed to display, 1)\n","[1074]: (Chorus, 1)\n","[1084]: (x3, 1)\n","[1097]: (Chorus, 1)\n","[1100]: (Unfortunately, we are not licensed to display, 1)\n","[1101]: (x3, 1)\n","[1101]: (x6, 1)\n","[1104]: (x4, 4)\n","[1108]: (x6, 1)\n","[1117]: (echo, 1)\n","[1122]: (Unfortunately, we are not licensed to display, 1)\n","[1134]: (Unfortunately, we are not licensed to display, 1)\n","[1149]: (chorus, 1)\n","[1153]: (Unfortunately, we are not licensed to display, 1)\n","[1199]: (echo, 1)\n","[1210]: (x4, 1)\n","[1234]: (Unfortunately, we are not licensed to display, 1)\n","[1242]: (Unfortunately, we are not licensed to display, 1)\n","[1250]: (Echo, 1)\n","[1270]: (Chorus, 1)\n","[1281]: (Unfortunately, we are not licensed to display, 1)\n","[1309]: (echo, 1)\n","[1323]: (x3, 1)\n","[1323]: (x4, 3)\n","[1327]: (Chorus, 1)\n","[1334]: (Unfortunately, we are not licensed to display, 1)\n","[1336]: (echo, 1)\n","[1341]: (chorus, 2)\n","[1348]: (Unfortunately, we are not licensed to display, 1)\n","[1353]: (Unfortunately, we are not licensed to display, 1)\n","[1374]: (Chorus, 1)\n","[1392]: (Chorus, 1)\n","[1412]: (x2, 1)\n","[1415]: (Unfortunately, we are not licensed to display, 1)\n","[1448]: (Unfortunately, we are not licensed to display, 1)\n","[1455]: (Unfortunately, we are not licensed to display, 1)\n","[1487]: (Chorus, 2)\n","[1491]: (Unfortunately, we are not licensed to display, 1)\n","[1494]: (echo, 1)\n","[1509]: (x 2, 2)\n","[1509]: (x 4, 2)\n","[1524]: (x4, 3)\n","[1549]: (x8, 1)\n","[1578]: (x2, 1)\n","[1603]: (x2, 2)\n","[1605]: (x4, 1)\n","[1615]: (Unfortunately, we are not licensed to display, 1)\n","[1622]: (Unfortunately, we are not licensed to display, 1)\n","[1629]: (Unfortunately, we are not licensed to display, 1)\n","[1632]: (Unfortunately, we are not licensed to display, 1)\n","[1648]: (chorus, 1)\n","[1686]: (x2, 2)\n","[1686]: (x6, 1)\n","[1686]: (x7, 2)\n","[1686]: (x 3, 2)\n","[1686]: (x 6, 2)\n","[1686]: (x 7, 1)\n","[1699]: (Chorus, 4)\n","[1703]: (Unfortunately, we are not licensed to display, 1)\n","[1713]: (echo, 1)\n","[1760]: (echo, 1)\n","[1770]: (echo, 2)\n","[1772]: (x2, 1)\n","[1772]: (x3, 2)\n","[1772]: (x5, 1)\n","[1772]: (x7, 1)\n","[1772]: (x8, 1)\n","[1772]: (x10, 1)\n","[1791]: (chorus, 1)\n","[1798]: (Unfortunately, we are not licensed to display, 1)\n","[1806]: (Unfortunately, we are not licensed to display, 1)\n","[1808]: (Unfortunately, we are not licensed to display, 1)\n","[1811]: (x2, 1)\n","[1827]: (Unfortunately, we are not licensed to display, 1)\n","[1834]: (Unfortunately, we are not licensed to display, 1)\n","[1850]: (x6, 2)\n","[1862]: (Unfortunately, we are not licensed to display, 1)\n","[1882]: (Echo, 3)\n","[1887]: (Unfortunately, we are not licensed to display, 1)\n","[1913]: (Echo, 1)\n","[1919]: (Chorus, 1)\n","[1989]: (x2, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"c4ghI0XRBj5j","colab_type":"code","outputId":"d240eef2-840f-4527-8cda-5b8f95fb41e4","executionInfo":{"status":"ok","timestamp":1574101802269,"user_tz":-60,"elapsed":6483,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":595}},"source":["print(data_moody['lyrics'][31])"],"execution_count":81,"outputs":[{"output_type":"stream","text":["The wind stands still around you\n","And suddenly I'm trembling and I don't know why\n","There's something deep about you\n","That echoes in my mind\n","\n","Mystifying feelings\n","Running round in my brain\n","Love is all around me\n","And it's written in your name\n","Love is all around me\n","And it's written in your name\n","\n","The wind stands still around you\n","And in your eyes the light inside you shines\n","If souls collide in heaven\n","Why not in present time?\n","\n","Words just can't convey it\n","Silence means no need to explain\n","Love is all around me\n","And it's written in your name\n","Love is all around me\n","And it's written in your name\n","\n","I am overcome\n","What a strange thing you have done\n","From now on my life has change\n","Nothing now can be the same\n","\n","Love is all around me\n","Love is all around me\n","And it's written in your name\n","Love is all around me\n","And it's written in your name\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wfHVGmu7auxO","colab_type":"code","outputId":"5f30aa36-bf4c-4dc4-ca8e-77dac97837d0","executionInfo":{"status":"ok","timestamp":1574101802271,"user_tz":-60,"elapsed":6471,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["# Solve some of the issues found in the EDA (DG: I did based on your code cell below)\n","for index in range(data_moody.shape[0]): # For all indexes in data\n","  i = data_moody['lyrics'][index] # Copy the lyrics\n","  i = re.sub(r'[x][0-9]', '', i) # Remove 'x' followed by a number\n","  i = re.sub(r'[0-9][x]', '', i) # Remove a number followed by 'x'\n","  i = re.sub(r'[x][\\s][0-9]', '', i) # Remove 'x ' followed by a number\n","  i = re.sub('\\[', '(', i) # Replace open brackets with open parenthesis\n","  i = re.sub('\\]', ')', i) # Replace close brackets with close parenthesis\n","  data_moody['lyrics'][index] = i # Replace original lyrics with the edited one"],"execution_count":82,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"4d8a6925-f2ed-4678-e3ed-d179784eb04c","executionInfo":{"status":"ok","timestamp":1574101804455,"user_tz":-60,"elapsed":8642,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"GThtNNQFYoc2","colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["# Use same function to remove parenthesis (or brackets) if they contain certain expressions which are not lyrics.\n","remove_list = ['Chorus', 'chorus', 'echo', 'Echo']\n","for index in range(data_moody.shape[0]): # For every song\n","  for expression in remove_list: # For every expression to be removed\n","    data_moody['lyrics'][index] = remove_artist_from_lyrics(expression, data_moody['lyrics'][index])"],"execution_count":83,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"A1F-FfDmGUZV","colab_type":"code","outputId":"0b78159c-cdd1-4535-c457-2a4186af20b8","executionInfo":{"status":"ok","timestamp":1574101805459,"user_tz":-60,"elapsed":9634,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["# Solve some of the issues found in the EDA (DG: I did based on your code cell below)\n","for index in range(data_moody.shape[0]): # For all indexes in data\n","  i = data_moody['lyrics'][index] # Copy the lyrics\n","  i = re.sub('\\[ \\]', '', i) # Replace empty brackets with an space inside\n","  i = re.sub('\\'cause', 'because', i) # Replace 'cause with becasue\n","  i = re.sub('\\'Cause', 'Because', i) # Replace 'cause with becasue\n","  i = re.sub('\\'em', 'them', i) # Replace 'em with them\n","  i = re.sub('mo\\'', 'more', i) # Replace mo' with more\n","  i = re.sub('c\\'mon', 'come on', i) # Replace c'mon with come on\n","  i = re.sub('outta', 'out of', i) # Replace outta with out of\n","  i = re.sub('da', 'that', i) # Replace da with that\n","  i = re.sub('kinda', 'kind of', i) # Replace kinda with kind of\n","  i = re.sub('gimme', 'give me', i) # Replace gimme with give me\n","  i = re.sub('gotta', 'have to', i) # Replace gotta with have to\n","  i = re.sub('gonna', 'going to', i) # Replace gonna with going to\n","  i = re.sub('ya got', 'you have got', i) # Replace ya got with you have got\n","  i = re.sub('wit you', 'with you', i) # Replace wit you with with you\n","  i = re.sub('in\\'', 'ing', i) # Replace -in' gerund with -ing\n","  i = re.sub('Incomprehensible', '', i) # Remove comment about incomprehensible lyrics\n","  i = re.sub('unverified', '', i) # Remove comment about unverified lyrics\n","  i = re.sub('\\*', '', i) # Remove '*' sign\n","  i = re.sub(r'--', ',', i) # Replace '--' with ','\n","  i = re.sub(r'\\.\\n\\n', '. ', i) # Replace end of paragraph ending with '.' with '. '\n","  i = re.sub(r',\\n\\n', ', ', i) # Replace end of paragraph ending with ',' with ', '\n","  i = re.sub(r'\\n\\n', '. ', i) #end of paragraph with '.'\n","  i = re.sub(r'\\n', ', ', i) #end of line with ', '\n","  i = re.sub(r'\\(', '', i) #remove open parenthesis to treat the same as other lyrics within the song\n","  i = re.sub(r'\\)', '', i) #remove close parenthesis to treat the same as other lyrics within the song\n","  i = re.sub(r'  ,', ',', i) #remove double space before comma\n","  i = re.sub(r'   ,', ',', i) #remove double space before comma\n","  i = re.sub(r':,', ':', i) #\n","  i = re.sub(r'\\?,', '?', i) #\n","  i = re.sub(r'\\?\\.', '?', i) #\n","  i = re.sub(r'\\?\\.\\.', '?...', i) #\n","  data_moody['lyrics'][index] = i # Replace original lyrics with the edited one"],"execution_count":84,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:34: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"2fb99903-7014-4de8-98c7-b6d57283f2c5","executionInfo":{"status":"ok","timestamp":1574101805461,"user_tz":-60,"elapsed":9619,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"sAwhqk0eHwIw","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["# Finally, are there ', ,', ',, '?\n","search_list = ['?.']\n","\n","for index in range(data_moody.shape[0]):\n","  str = data_moody['lyrics'][index]\n","  for text in search_list:\n","    n_text = str.count(text)\n","    if n_text > 0:\n","      print(f\"[{index}]: ({text}, {n_text})\", sep=\"\")\n"],"execution_count":85,"outputs":[{"output_type":"stream","text":["[631]: (?., 1)\n","[704]: (?., 2)\n","[1051]: (?., 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7AXCanrIJcH9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"4b50e931-3cf8-4872-e318-15417201962e","executionInfo":{"status":"ok","timestamp":1574114399410,"user_tz":-60,"elapsed":699,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}}},"source":["print(data_moody['lyrics'][1652])"],"execution_count":125,"outputs":[{"output_type":"stream","text":["On the thaty of her arrival, No one is there to meet her, Something of a sad one, A girl with permanent tears, Born without a family, Born without a name, And all she ever wanted, Was to wipe her tears away. Wipe her tears away, Away... away. If someone came to love her, And if someone came to be, The one that will protect her, Be a family, Now we will see a smile again, And tears like dreams can be, Something we will never see, Lost in her memory. Wipe her tears away, Away... away, Wipe her tears away, Tears away... away... away. She's something of a tragedy, Stands in the shade of despair, I want to cast some light onto her world, A world of permanent tears, Born without a family, Born without a name, Free this weeping willow, From drowning in a flood of tears. Wipe her tears away, Tears away... away... away REPEAT\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"DTyo0Lclnwve","colab_type":"code","colab":{}},"source":["# for i in len(range(data_moody['lyrics'])):\n","#   i = re.sub(r'\\n\\n', '', i) #end of paragraph\n","#   i = re.sub(r'\\n', '', i) #end of line\n","#   i = re.sub(r'(*):', '', i) #remove parenthesis colon text as this seems to indicate another artist\n","#   i = re.sub(r'(', '', i) #remove open parenthesis to treat the same as other lyrics within the song\n","#   i = re.sub(r')', '', i) #remove close parenthesis to treat the same as other lyrics within the song"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"LXM-QLXXnx81","colab_type":"text"},"source":["### MER dataset clean-up\n","\n","Identify mismatching parentheses, brackets and curly barckets in lyrics"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"NtsYluiJ2q2X","outputId":"83ebd3aa-1424-4248-a00c-1bc3ecc2f51e","executionInfo":{"status":"ok","timestamp":1574101805465,"user_tz":-60,"elapsed":9592,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":221}},"source":["# Use mismatch on data_mer\n","mismatch(data_mer)"],"execution_count":88,"outputs":[{"output_type":"stream","text":["[202]: 17( vs 18)\n","[240]: 4( vs 3)\n","[284]: 24( vs 25)\n","[402]: 32( vs 33)\n","[427]: 5( vs 6)\n","[138]: 2[ vs 1]\n","[211]: 1[ vs 0]\n","[219]: 2[ vs 0]\n","[372]: 1[ vs 0]\n","[696]: 1[ vs 0]\n","[402]: 29{ vs 28}\n","[427]: 1{ vs 0}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"oKKV04HHyH9z"},"source":["Solve everyone of the issues."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"O5DOmKIFyH92","colab":{}},"source":["data_mer['lyrics'][202] = data_mer['lyrics'][202].replace('))', ')')\n","\n","str_240_rpl = ['(', ')']\n","for item in str_240_rpl:\n","  data_mer['lyrics'][240] = data_mer['lyrics'][240].replace(item, '')\n","\n","str_284 = 'They\\'re just tryin\\' to keep t alive)'\n","data_mer['lyrics'][284] = data_mer['lyrics'][284].replace(str_284, '')\n","\n","str_402 = '{We got an hour, no more than that)'\n","data_mer['lyrics'][402] = data_mer['lyrics'][402].replace(str_402, '{We got an hour, no more than that}')\n","\n","data_mer['lyrics'][427] = data_mer['lyrics'][427].replace('{', '(')\n","\n","data_mer['lyrics'][138] = data_mer['lyrics'][138].replace('[ Find more Lyrics on http://mp3lyrics.org/W9U ]', '')\n","data_mer['lyrics'][138] = data_mer['lyrics'][138].replace('Lyrics: Woman Love, Gene Vincent [end', '')\n","\n","for index in [211, 219, 372, 696]:\n","  data_mer['lyrics'][index] = data_mer['lyrics'][index].replace('[', '')"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"YLQtj8b67uJO"},"source":["Remove name of the artist from lyrics"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"6W4bjA-EButy","colab":{}},"source":["# Remove artist name from lyrics in data_mer\n","for index in range(data_mer.shape[0]):\n","  data_mer['lyrics'][index] = remove_artist_from_lyrics(data_mer['artist'][index], data_mer['lyrics'][index])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"8c352159-5f9e-406e-e426-1636cfd080c3","executionInfo":{"status":"ok","timestamp":1574101805665,"user_tz":-60,"elapsed":9770,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"bo4RliJXS3qB","colab":{"base_uri":"https://localhost:8080/","height":799}},"source":["# Are there 'x2', 'x3', ..., 'x 2', x 3', ...'Chorus'?\n","search_list = ['x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9','x10',\n","               'x 2', 'x 3', 'x 4', 'x 5', 'x 6', 'x 7', 'x 8', 'x 9', 'x 10',\n","               'Chorus', 'chorus', 'echo', 'Echo',\n","               'Unfortunately, we are not licensed to display']\n","\n","for index in range(data_mer.shape[0]):\n","  str = data_mer['lyrics'][index]\n","  for text in search_list:\n","    n_text = str.count(text)\n","    if n_text > 0:\n","      print(f\"[{index}]: ({text}, {n_text})\", sep=\"\")\n"],"execution_count":91,"outputs":[{"output_type":"stream","text":["[57]: (Chorus, 3)\n","[88]: (echo, 1)\n","[91]: (Chorus, 3)\n","[95]: (chorus, 3)\n","[139]: (Chorus, 3)\n","[141]: (x2, 1)\n","[163]: (x2, 1)\n","[163]: (Chorus, 3)\n","[170]: (chorus, 1)\n","[175]: (Chorus, 2)\n","[179]: (x4, 1)\n","[179]: (Chorus, 4)\n","[195]: (Chorus, 2)\n","[195]: (chorus, 1)\n","[202]: (Chorus, 4)\n","[210]: (Chorus, 3)\n","[217]: (Chorus, 4)\n","[251]: (Chorus, 1)\n","[271]: (Chorus, 2)\n","[273]: (x 2, 3)\n","[273]: (Chorus, 3)\n","[295]: (x4, 1)\n","[300]: (x2, 1)\n","[300]: (x3, 2)\n","[300]: (x4, 1)\n","[310]: (x3, 1)\n","[318]: (Chorus, 2)\n","[325]: (Chorus, 3)\n","[345]: (Chorus, 2)\n","[353]: (x2, 3)\n","[353]: (x4, 1)\n","[376]: (Chorus, 3)\n","[378]: (x2, 1)\n","[378]: (Chorus, 1)\n","[379]: (x2, 3)\n","[379]: (Chorus, 3)\n","[411]: (x4, 1)\n","[411]: (Chorus, 2)\n","[431]: (x 2, 2)\n","[431]: (x 3, 1)\n","[431]: (Chorus, 3)\n","[459]: (x2, 1)\n","[474]: (chorus, 1)\n","[543]: (x4, 1)\n","[589]: (x2, 1)\n","[755]: (echo, 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab_type":"code","id":"4ns_Qz6oS3qQ","colab":{}},"source":["# Solve some of the issues found in the EDA (DG: I did based on your code cell below)\n","for index in range(data_mer.shape[0]): # For all indexes in data\n","  i = data_mer['lyrics'][index] # Copy the lyrics\n","  i = re.sub(r'[x][0-9]', '', i) # Remove 'x' followed by a number\n","  i = re.sub(r'[0-9][x]', '', i) # Remove a number followed by 'x'\n","  i = re.sub(r'[x][\\s][0-9]', '', i) # Remove 'x ' followed by a number\n","  i = re.sub('\\[', '(', i) # Replace open brackets with open parenthesis\n","  i = re.sub('\\]', ')', i) # Replace close brackets with close parenthesis\n","  data_mer['lyrics'][index] = i # Replace original lyrics with the edited one"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"4LWrSUq7S3qX","colab":{}},"source":["# Use same function to remove parenthesis (or brackets) if they contain certain expressions which are not lyrics.\n","remove_list = ['Chorus', 'chorus', 'echo', 'Echo']\n","for index in range(data_mer.shape[0]): # For every song\n","  for expression in remove_list: # For every expression to be removed\n","    data_mer['lyrics'][index] = remove_artist_from_lyrics(expression, data_mer['lyrics'][index])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"UXzeYBVgS3qh","colab":{}},"source":["# Solve some of the issues found in the EDA (DG: I did based on your code cell below)\n","for index in range(data_mer.shape[0]): # For all indexes in data\n","  i = data_mer['lyrics'][index] # Copy the lyrics\n","  i = re.sub('\\[ \\]', '', i) # Replace empty brackets with an space inside\n","  i = re.sub('\\'cause', 'because', i) # Replace 'cause with becasue\n","  i = re.sub('\\'Cause', 'Because', i) # Replace 'cause with becasue\n","  i = re.sub('\\'em', 'them', i) # Replace 'em with them\n","  i = re.sub('mo\\'', 'more', i) # Replace mo' with more\n","  i = re.sub('c\\'mon', 'come on', i) # Replace c'mon with come on\n","  i = re.sub('outta', 'out of', i) # Replace outta with out of\n","  i = re.sub('da', 'that', i) # Replace da with that\n","  i = re.sub('kinda', 'kind of', i) # Replace kinda with kind of\n","  i = re.sub('gimme', 'give me', i) # Replace gimme with give me\n","  i = re.sub('gotta', 'have to', i) # Replace gotta with have to\n","  i = re.sub('gonna', 'going to', i) # Replace gonna with going to\n","  i = re.sub('ya got', 'you have got', i) # Replace ya got with you have got\n","  i = re.sub('wit you', 'with you', i) # Replace wit you with with you\n","  i = re.sub('in\\'', 'ing', i) # Replace -in' gerund with -ing\n","  i = re.sub('Incomprehensible', '', i) # Remove comment about incomprehensible lyrics\n","  i = re.sub('unverified', '', i) # Remove comment about unverified lyrics\n","  i = re.sub('\\*', '', i) # Remove '*' sign\n","  i = re.sub(r'--', ',', i) # Replace '--' with ','\n","  i = re.sub(r'\\.\\n\\n', '. ', i) # Replace end of paragraph ending with '.' with '. '\n","  i = re.sub(r',\\n\\n', ', ', i) # Replace end of paragraph ending with ',' with ', '\n","  i = re.sub(r'\\n\\n', '. ', i) #end of paragraph with '.'\n","  i = re.sub(r'\\n', ', ', i) #end of line with ', '\n","  i = re.sub(r'\\(', '', i) #remove open parenthesis to treat the same as other lyrics within the song\n","  i = re.sub(r'\\)', '', i) #remove close parenthesis to treat the same as other lyrics within the song\n","  i = re.sub(r':,', ':', i) #\n","  i = re.sub(r'\\?,', '?', i) #\n","  i = re.sub(r'\\?\\.', '?', i) #\n","  i = re.sub(r'\\?\\.\\.', '?...', i) #  \n","  data_mer['lyrics'][index] = i # Replace original lyrics with the edited one"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gt097HiKntKs","colab_type":"code","colab":{}},"source":["# for i in len(range(data_mer['lyrics'])):\n","#   i = re.sub(r'\\n\\n', '', i) #end of paragraph\n","#   i = re.sub(r'\\n', '', i) #end of line\n","#   i = re.sub(r'(*):', '', i) #remove parenthsis colon text as this seems to indicate another artist\n","#   i = re.sub(r'(', '', i) #remove open parenthesis to treat the same as other lyrics within the song\n","#   i = re.sub(r')', '', i) #remove close parenthesis to treat the same as other lyrics within the song\n","#   i = re.sub(r'- ', ',', i) #removing the dash and replacing with the comma"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xpqi4L4o9GJS","colab_type":"text"},"source":["## English songs only\n","\n","First for data_moody"]},{"cell_type":"code","metadata":{"id":"TQse5IiGpA3i","colab_type":"code","colab":{}},"source":["# Get the language of the lyrics and add the information to the data frame as the new variable 'language'\n","language = []\n","lyrics_len = []\n","for text in data_moody['lyrics']:\n","  language.append(langid.classify(text)[0])\n","  lyrics_len.append(len(text.split()))\n","data_moody['language'] = language\n","data_moody['lyrics_len'] = lyrics_len\n","n_samples = sum(data_moody['language']=='en')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"vRaDB_bytFQq","colab_type":"code","outputId":"7ec32744-3ad8-4f95-f13a-911a35271fb9","executionInfo":{"status":"ok","timestamp":1574101818793,"user_tz":-60,"elapsed":22862,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# Number of languages\n","print(\"Number of different languages:\", len(set(data_moody['language'])))\n","# print(\"Number of songs in English:\", sum(data_moody['language']=='en'))\n","print(\"Number of songs in English:\", n_samples)"],"execution_count":97,"outputs":[{"output_type":"stream","text":["Number of different languages: 24\n","Number of songs in English: 1889\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Zmq-mWxi4hkA","colab_type":"code","outputId":"a2bbe272-b741-4f5d-f589-602feec53d66","executionInfo":{"status":"ok","timestamp":1574101818794,"user_tz":-60,"elapsed":22852,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":452}},"source":["# Example of songs not in English language\n","data_moody[data_moody['language']=='fr']"],"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>language</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>212</th>\n","      <td>213</td>\n","      <td>Emilie Simon</td>\n","      <td>Le Vieil Amant</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Mon amour, j'ai pensé, avec naïveté, qu'un bri...</td>\n","      <td>fr</td>\n","      <td>296</td>\n","    </tr>\n","    <tr>\n","      <th>355</th>\n","      <td>356</td>\n","      <td>Enigma</td>\n","      <td>Mea Culpa</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Kyrie eleison, Christe eleison. Je ne dors plu...</td>\n","      <td>fr</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>386</th>\n","      <td>387</td>\n","      <td>Dark Sanctuary</td>\n","      <td>Des Illusions</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Un regard, Une illusion, Un sourire, Une autre...</td>\n","      <td>fr</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>405</th>\n","      <td>406</td>\n","      <td>Carla Bruni</td>\n","      <td>Le Ciel Dans Une Chambre</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Quand tu es près de moi, Cette chambre n'a plu...</td>\n","      <td>fr</td>\n","      <td>167</td>\n","    </tr>\n","    <tr>\n","      <th>463</th>\n","      <td>464</td>\n","      <td>Yelle</td>\n","      <td>Je Veux Te Voir (Club-Club Version)</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Cuizinier avec ton petit sexe entouré de poils...</td>\n","      <td>fr</td>\n","      <td>289</td>\n","    </tr>\n","    <tr>\n","      <th>551</th>\n","      <td>552</td>\n","      <td>Julie Doiron</td>\n","      <td>Penses-Donc (Tu Es Seule)</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Penses-donc une deuxieme fois. Tu realiseras ....</td>\n","      <td>fr</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>788</th>\n","      <td>789</td>\n","      <td>Keren Ann</td>\n","      <td>Ailleurs</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>J'ai du faire demi-tour, Longer la rivière san...</td>\n","      <td>fr</td>\n","      <td>208</td>\n","    </tr>\n","    <tr>\n","      <th>1163</th>\n","      <td>1164</td>\n","      <td>Dark Sanctuary</td>\n","      <td>La chute de l'ange</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Music by Arkthate, Lyrics by Hylgaryss. Une lu...</td>\n","      <td>fr</td>\n","      <td>224</td>\n","    </tr>\n","    <tr>\n","      <th>1216</th>\n","      <td>1217</td>\n","      <td>Serge Gainsbourg</td>\n","      <td>Comic Strip</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Viens petite fille thatns mon comic strip, Vie...</td>\n","      <td>fr</td>\n","      <td>213</td>\n","    </tr>\n","    <tr>\n","      <th>1524</th>\n","      <td>1525</td>\n","      <td>Yelle</td>\n","      <td>Mal Poli</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Tu es mal poli, Je t'avais dit de pas me tutoy...</td>\n","      <td>fr</td>\n","      <td>243</td>\n","    </tr>\n","    <tr>\n","      <th>1747</th>\n","      <td>1748</td>\n","      <td>Enigma</td>\n","      <td>Callas Went Away</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Callas went away, But her voice forever stay, ...</td>\n","      <td>fr</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>1845</th>\n","      <td>1846</td>\n","      <td>Zebda</td>\n","      <td>Tomber La Chemise</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Tous les enfants de ma cité et même d'ailleurs...</td>\n","      <td>fr</td>\n","      <td>349</td>\n","    </tr>\n","    <tr>\n","      <th>1886</th>\n","      <td>1887</td>\n","      <td>Garou</td>\n","      <td>Gitan</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Gitan,, Je rêvais enfant, De vivre libre comme...</td>\n","      <td>fr</td>\n","      <td>233</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      ml_index            artist  ... language lyrics_len\n","212        213      Emilie Simon  ...       fr        296\n","355        356            Enigma  ...       fr        100\n","386        387    Dark Sanctuary  ...       fr         55\n","405        406       Carla Bruni  ...       fr        167\n","463        464             Yelle  ...       fr        289\n","551        552      Julie Doiron  ...       fr         80\n","788        789         Keren Ann  ...       fr        208\n","1163      1164    Dark Sanctuary  ...       fr        224\n","1216      1217  Serge Gainsbourg  ...       fr        213\n","1524      1525             Yelle  ...       fr        243\n","1747      1748            Enigma  ...       fr         35\n","1845      1846             Zebda  ...       fr        349\n","1886      1887             Garou  ...       fr        233\n","\n","[13 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":98}]},{"cell_type":"code","metadata":{"id":"hSZIP6iYEPey","colab_type":"code","outputId":"c41629c5-a75d-4feb-e890-20ed2ed5a144","executionInfo":{"status":"ok","timestamp":1574101818795,"user_tz":-60,"elapsed":22842,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["# New data frame with English lyrics songs only\n","data_moody = data_moody[data_moody['language']=='en']\n","data_moody.sample()"],"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>language</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>416</th>\n","      <td>417</td>\n","      <td>The Corrs</td>\n","      <td>Baby Be Brave (album version)</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Maybe deep down inside, you don't believe it, ...</td>\n","      <td>en</td>\n","      <td>263</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     ml_index     artist  ... language lyrics_len\n","416       417  The Corrs  ...       en        263\n","\n","[1 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":99}]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"8a646059-105d-429e-eec7-59d9c3442384","executionInfo":{"status":"ok","timestamp":1574101818797,"user_tz":-60,"elapsed":22833,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"3ZkDldm9I1S-","colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["# We drop the language variable\n","data_moody = data_moody.drop('language', axis=1)\n","data_moody.sample()"],"execution_count":100,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1223</th>\n","      <td>1224</td>\n","      <td>Nerf Herder</td>\n","      <td>Welcome To My World</td>\n","      <td>happy</td>\n","      <td>pos</td>\n","      <td>Sitting in my boxers, eating Apple Jacks, Welc...</td>\n","      <td>148</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      ml_index  ... lyrics_len\n","1223      1224  ...        148\n","\n","[1 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":100}]},{"cell_type":"markdown","metadata":{"id":"BPdbzRXuU1cS","colab_type":"text"},"source":["Then for data_mer"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"guqYVtYeW13B","colab":{}},"source":["# Get the language of the lyrics and add the information to the data frame as the new variable 'language'\n","language = []\n","lyrics_len = []\n","for text in data_mer['lyrics']:\n","  language.append(langid.classify(text)[0])\n","  lyrics_len.append(len(text.split()))\n","data_mer['language'] = language\n","data_mer['lyrics_len'] = lyrics_len\n","n_samples = sum(data_mer['language']=='en')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"45d62779-81f1-437e-c455-de0edd6312ac","executionInfo":{"status":"ok","timestamp":1574101822294,"user_tz":-60,"elapsed":26312,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"dFZEzhweW13R","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# Number of languages\n","print(\"Number of different languages:\", len(set(data_mer['language'])))\n","# print(\"Number of songs in English:\", sum(data_moody['language']=='en'))\n","print(\"Number of songs in English:\", n_samples)"],"execution_count":102,"outputs":[{"output_type":"stream","text":["Number of different languages: 1\n","Number of songs in English: 771\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"QbNsd-hDXd1U","colab_type":"text"},"source":["In the case of data_mer, all songs are in English language"]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"294c8a5f-66bd-40cc-f839-b122cb1e4575","executionInfo":{"status":"ok","timestamp":1574101822296,"user_tz":-60,"elapsed":26301,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"DsOBL7JgW13Z","colab":{"base_uri":"https://localhost:8080/","height":419}},"source":["# Example of songs not in English language\n","data_mer[data_mer['language']=='en']"],"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mer_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>language</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MT0000008995</td>\n","      <td>Billie Holiday</td>\n","      <td>You're Too Lovely to Last</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Just when you are near, When I hold you fast, ...</td>\n","      <td>en</td>\n","      <td>136</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MT0000022649</td>\n","      <td>Jim Reeves</td>\n","      <td>Adios Amigo</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Adios amigo, adios my friend, The road we have...</td>\n","      <td>en</td>\n","      <td>99</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MT0000024499</td>\n","      <td>Bob Marley</td>\n","      <td>Concrete Jungle</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>No sun will shine in my thaty tothaty no sun w...</td>\n","      <td>en</td>\n","      <td>258</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MT0000026571</td>\n","      <td>Perry Como</td>\n","      <td>Till the End of Time</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Till the end of time, long as stars are in the...</td>\n","      <td>en</td>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MT0000027422</td>\n","      <td>Genesis</td>\n","      <td>Uncertain Weather</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>A thaty of uncertain weather, Captured in a fr...</td>\n","      <td>en</td>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>MT0033391277</td>\n","      <td>Simon Garfunkel</td>\n","      <td>April Come She Will</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>, April come she will, When streams are ripe a...</td>\n","      <td>en</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>MT0033733581</td>\n","      <td>Sinead O'Connor</td>\n","      <td>Door Peep</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Door peep shall not enter this a holy land, Wh...</td>\n","      <td>en</td>\n","      <td>171</td>\n","    </tr>\n","    <tr>\n","      <th>768</th>\n","      <td>MT0033994043</td>\n","      <td>Rosemary Clooney</td>\n","      <td>Tenderly</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>The evening breeze caressed the trees tenderly...</td>\n","      <td>en</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>769</th>\n","      <td>MT0034992204</td>\n","      <td>John Denver</td>\n","      <td>Farewell Andromeda (Welcome to My Morning)</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Welcome to my morning, Welcome to my thaty, I'...</td>\n","      <td>en</td>\n","      <td>172</td>\n","    </tr>\n","    <tr>\n","      <th>770</th>\n","      <td>MT0035119161</td>\n","      <td>Elton John</td>\n","      <td>Dixie Lily</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Showboat coming up the river, See her lanterns...</td>\n","      <td>en</td>\n","      <td>129</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>771 rows × 8 columns</p>\n","</div>"],"text/plain":["        mer_index            artist  ... language lyrics_len\n","0    MT0000008995    Billie Holiday  ...       en        136\n","1    MT0000022649        Jim Reeves  ...       en         99\n","2    MT0000024499        Bob Marley  ...       en        258\n","3    MT0000026571        Perry Como  ...       en         95\n","4    MT0000027422           Genesis  ...       en        199\n","..            ...               ...  ...      ...        ...\n","766  MT0033391277   Simon Garfunkel  ...       en         67\n","767  MT0033733581   Sinead O'Connor  ...       en        171\n","768  MT0033994043  Rosemary Clooney  ...       en         70\n","769  MT0034992204       John Denver  ...       en        172\n","770  MT0035119161        Elton John  ...       en        129\n","\n","[771 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":103}]},{"cell_type":"code","metadata":{"id":"Vxr2J_NfIauB","colab_type":"code","outputId":"8f916c2e-0e61-414f-c679-3afd95d7becf","executionInfo":{"status":"ok","timestamp":1574101822298,"user_tz":-60,"elapsed":26291,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["# We drop the language variable\n","data_mer = data_mer.drop('language', axis=1)\n","data_mer.sample()"],"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mer_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>527</th>\n","      <td>MT0010007881</td>\n","      <td>Marianne Faithfull</td>\n","      <td>How Many Worlds</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>Thinking of a world and the light of the sun, ...</td>\n","      <td>96</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        mer_index  ... lyrics_len\n","527  MT0010007881  ...         96\n","\n","[1 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":104}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"PmI1q-XZri6j"},"source":["## Remove short lyrics songs\n","\n","First for data_moody"]},{"cell_type":"code","metadata":{"id":"lhsvM7EPuK9f","colab_type":"code","outputId":"43cad8fd-e020-4dca-8cd0-7b90eb1ec101","executionInfo":{"status":"ok","timestamp":1574101822300,"user_tz":-60,"elapsed":26282,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":170}},"source":["# Get statistical information about the length of the lyrics\n","data_moody['lyrics_len'].describe()"],"execution_count":105,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1889.000000\n","mean      237.886713\n","std       151.165244\n","min         1.000000\n","25%       138.000000\n","50%       207.000000\n","75%       299.000000\n","max      1108.000000\n","Name: lyrics_len, dtype: float64"]},"metadata":{"tags":[]},"execution_count":105}]},{"cell_type":"code","metadata":{"id":"LVB13gRnuwmk","colab_type":"code","outputId":"5ffd2eec-bb4c-40c7-a74d-9439a1c492fd","executionInfo":{"status":"ok","timestamp":1574101823556,"user_tz":-60,"elapsed":27526,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":352}},"source":["# Show the histogram of lyrics length\n","plt.figure(figsize=[10, 5])\n","plt.hist(data_moody['lyrics_len'], bins=200)\n","plt.xlabel('lyrics length in data_moody')"],"execution_count":106,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'lyrics length in data_moody')"]},"metadata":{"tags":[]},"execution_count":106},{"output_type":"display_data","data":{"image/png":"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\nMgCAJbWhG2l29+8k+Z1NqmWzbNnlQhzrLeZ4by3He+s41lvL8d4E624iBwA4UfkuPACAQbsmQPla\nmc1XVQ+uqrdU1c1V9Z6qeva0/pSqurqqbp1+339aX1X1q9Pf4IaqevT2voOdp6pOqqp3VdUbp+WH\nVNW10zF97fSBjVTVPabl26bt+7az7p2oqu5XVZdX1Xur6paq+nbn9uJU1XOmf4/cVFWvrqp7Or83\nT1W9vKrurKqbVq0bPp+r6sJp/K1VdeF2vJedYlcEKF8rszB3Jfm57n5EkrOTPHM6rgeTXNPdZya5\nZlpOZsf/zOnnQJKXbn3JO96zk9yyavkFSV7U3Q9N8qkkF03rL0ryqWn9i6ZxjHlxkjd198OTPDKz\n4+7cXoCqOj3JTyfZ393/KLMPHv1onN+b6RVJnnzEuqHzuapOSfK8JN+W2beNPG8ldPH1dkWAiq+V\nWYjuvqO73zk9/mxm/4E5PbNje2gadijJ+dPj85K8smf+b5L7VdVpW1z2jlVVZyQ5N8ml03IleUKS\ny6chRx7rlb/B5UmeOI1nDlV13yTfleSyJOnuL3T3p+PcXqSTk3xjVZ2c5F5J7ojze9N099uSfPKI\n1aPn8/cmubq7P9ndn0pydb4+lDHZLQHK18os2DSF/qgk1yY5tbvvmDZ9NMmp02N/h435lSS/kOTL\n0/IDkny6u++allcfz68c62n7Z6bxzOchST6e5NenS6aXVtW949xeiO6+PckLk3w4s+D0mSTXx/m9\naKPns/N8wG4JUCxQVd0nyeuT/Ex3//XqbT37GKePcm5QVT0lyZ3dff1213KCODnJo5O8tLsfleRv\n8tXLG0mc25tpugx0XmbB9UFJ7h0zG1vK+bz5dkuAmutrZRhXVXfPLDy9qrvfMK3+2Mrli+n3ndN6\nf4f1e2ySH6yqw5ldgn5CZj0695sueSRfezy/cqyn7fdN8ldbWfAO95EkH+nua6flyzMLVM7txTgn\nyZ9398e7+4tJ3pDZOe/8XqzR89l5PmC3BChfK7MAU8/BZUlu6e5fXrXpyiQrn864MMkVq9b/2PQJ\nj7OTfGbV9DHH0d3P7e4zuntfZufvm7v7aUnekuSCadiRx3rlb3DBNN7/Xc6puz+a5C+q6mHTqicm\nuTnO7UX5cJKzq+pe079XVo6383uxRs/n30vypKq6/zRr+KRpHUfT3bviJ8n3J3l/kg8k+c/bXc9u\n+EnyuMymfG9I8u7p5/sz60W4JsmtSf4gySnT+Mrs05AfSHJjZp+42fb3sdN+kjw+yRunx9+c5E+T\n3JbkdUnuMa2/57R827T9m7e77p32k+SsJNdN5/f/TnJ/5/ZCj/cvJnlvkpuS/M8k93B+b+rxfXVm\n/WVfzGyG9aL1nM9JfmI67rclecZ2v69l/nEncgCAQbvlEh4AwJYRoAAABglQAACDBCgAgEECFADA\nIAEKAGCQAAU7UFV9bnD8g6rq8rVHHvc1fryqXrKR1zjO6z5o1fLhqnrgGs/ZX1W/usF9Hve9VNXj\nq+o71ruPRZvqe+N21wEnqpPXHgLsZFV1cnf/Zb56x+dl8+OZ3VzxL+d9Qndfl9lNMBfp8Uk+l+T/\nLHg/wA5kBgp2sKp6ZVWdv2r5VVV13jTDcmVVvTnJNVW1r6pumsacVFUvrKqbquqGqnrWtP7iqrp5\nWvfCNfa7p6peX1XvmH4eO61/flW9vKreWlUfrKqfXvWc/1JV76uqt1fVq6vq56vqgiT7k7yqqt5d\nVd84DX9WVb2zqm6sqocfZf9fmX053j6PeM4zqur9VfWnmX0P28r6H6iqa6vqXVX1B1V1alXtS/Lv\nkjxnqus7jzbuOMfn+VV1qKr+qKo+VFU/XFX/dXo/b6rZd0ymqp44vd6N03u4xxrrn1xV762qdyb5\n4Wnd3arq1qras2r5tpVlYDEEKNjZLstsBidVdd8k35Hkqmnbo5Nc0N3ffcRzDiTZl+Ss7v4nmYWX\nByT5oSTfOq37pTX2++IkL+ruf5bkXyS5dNW2hyf53iSPSfK8qrp7Va2Me2SS78ssNKW7L89sJulp\n3X1Wd//t9Bqf6O5HJ3lpkp+f4zh83T5Xb6zZF6n+YmbB6XFJHrFq89uTnN3dj8rsi5x/obsPJ3nZ\n9B7P6u4/Otq4NWr6lsy+FPoHk/xGkrd09z9O8rdJzq2qeyZ5RZJ/Na0/Ocm/X2P9/0jyA0n+aZJ/\nkCTd/eXp9Z827fecJH/W3R+f47gB6yRAwQ7W3X+Y2Rdp70ny1CSv7+67ps1Xd/cnj/K0c5L895Vx\n05jPJPm7JJdV1Q8n+X9r7PqcJC+pqndn9sWkf6+q7jNtu6q7P9/dn8js299PzSy4XNHdf9fdn03y\n22u8/hum39dnFvbWcrR9rvZtSd7a3R/v7i8kee2qbWck+b2qujHJf0jyrcfYx7zjVvxud38xs+8a\nOynJm6b1N07v6WFJ/ry73z+tP5Tku46z/uHT+lt79h1cv7FqXy9P8mPT459I8utr1AZskAAFO98r\nk/ybJM/I7D+kK/5m3heYwtRjklye5Cn56n/sj+Vumc3GnDX9nN7dK43tn1817ktZX6/lymvM+/yN\n7PPXkrxkmu35ycy+yHYj476mpmmG6Iv91S8e/fJgfWvq7r9I8rGqekJmf8ff3czXB76eAAU73yuS\n/EySdPfNc4y/OslPVtXJSVJVp0yzR/ft7t9J8pzMLrUdz+8nedbKQlWdtcb4P07yA1V1z2lfT1m1\n7bNJvmmOujfi2iTfXVUPmC7v/ctV2+6b5Pbp8YXHqetY49brfUn2VdVDp+WnJ/nD46x/77T+W6b1\nTz3i9S7NbFbqdd39pU2oDzgOAQp2uO7+WJJbMv9lm0uTfDjJDVX1Z0n+dWZB4Y1VdUNmvT4/u8Zr\n/HSS/VPD+c2ZNVwfr8Z3ZHap74bMZkduzOyyYTILgC87ool8U3X3HUmen+RPMgtzt6za/Pwkr6uq\n65N8YtX6307yQytN5McZt96a/i6zWcPXTZcFv5zkZWusP5DkqqmJ/M4jXvLKJPeJy3ewJeqrs8rA\nTlRV98oskDy6uz+z1vjtUlX36e7PTfW+LcmB7n7ndte1W1TV/sya3r9zu2uBE4EZKNjBquqczGZT\nfm2Zw9Pkkqnp/J2ZNbsLT5ukqg4meX2S5253LXCiMAMFsE5V9Ywkzz5i9R939zO3ox5g6whQAACD\nXMIDABgkQAEADBKgAAAGCVAAAIMEKACAQf8fgsB8l+7bnbQAAAAASUVORK5CYII=\n","text/plain":["<Figure size 720x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"89aj6qyHxTo6","colab_type":"text"},"source":["There are many songs with a unique length value. Let's calculate the mode."]},{"cell_type":"code","metadata":{"id":"jrGiRMOhwzog","colab_type":"code","outputId":"734ace2c-1eff-4a51-d9cc-7268add10767","executionInfo":{"status":"ok","timestamp":1574101823558,"user_tz":-60,"elapsed":27518,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["m = stats.mode(data_moody['lyrics_len'])\n","print(f'\\nLyrics length mode: {int(m[0])} words, in {int(m[1])} songs.')"],"execution_count":107,"outputs":[{"output_type":"stream","text":["\n","Lyrics length mode: 32 words, in 53 songs.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UWAEeeazDZSe","colab_type":"text"},"source":["We remove songs with lyrics shorter than a certain length words."]},{"cell_type":"code","metadata":{"id":"3pg6cBDXmHHw","colab_type":"code","outputId":"9b46f817-a910-431b-e61b-31316fd9f75a","executionInfo":{"status":"ok","timestamp":1574101823560,"user_tz":-60,"elapsed":27509,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":170}},"source":["# Remove too short lyrics\n","min_length = 40\n","data_moody = data_moody[data_moody['lyrics_len'] >= min_length]\n","data_moody['lyrics_len'].describe()"],"execution_count":108,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1807.000000\n","mean      247.388489\n","std       147.664185\n","min        40.000000\n","25%       148.000000\n","50%       213.000000\n","75%       304.000000\n","max      1108.000000\n","Name: lyrics_len, dtype: float64"]},"metadata":{"tags":[]},"execution_count":108}]},{"cell_type":"code","metadata":{"id":"nv4KDomnZaaG","colab_type":"code","outputId":"ebe110a7-be32-40ff-d46c-e7110aa6d7a8","executionInfo":{"status":"ok","timestamp":1574101823562,"user_tz":-60,"elapsed":27497,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["data_moody.groupby(by='mood').count()"],"execution_count":109,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","    <tr>\n","      <th>mood</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>angry</th>\n","      <td>468</td>\n","      <td>468</td>\n","      <td>468</td>\n","      <td>468</td>\n","      <td>468</td>\n","      <td>468</td>\n","    </tr>\n","    <tr>\n","      <th>happy</th>\n","      <td>456</td>\n","      <td>456</td>\n","      <td>456</td>\n","      <td>456</td>\n","      <td>456</td>\n","      <td>456</td>\n","    </tr>\n","    <tr>\n","      <th>relaxed</th>\n","      <td>440</td>\n","      <td>440</td>\n","      <td>440</td>\n","      <td>440</td>\n","      <td>440</td>\n","      <td>440</td>\n","    </tr>\n","    <tr>\n","      <th>sad</th>\n","      <td>443</td>\n","      <td>443</td>\n","      <td>443</td>\n","      <td>443</td>\n","      <td>443</td>\n","      <td>443</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         ml_index  artist  title  mood_pn  lyrics  lyrics_len\n","mood                                                         \n","angry         468     468    468      468     468         468\n","happy         456     456    456      456     456         456\n","relaxed       440     440    440      440     440         440\n","sad           443     443    443      443     443         443"]},"metadata":{"tags":[]},"execution_count":109}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"e0XJ7DneVEao"},"source":["Then for data_mer"]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"cb97660e-6cc1-4c3b-e7a5-ed1ef4689cb3","executionInfo":{"status":"ok","timestamp":1574101823563,"user_tz":-60,"elapsed":27487,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"sq6waU87VNB3","colab":{"base_uri":"https://localhost:8080/","height":170}},"source":["# Get statistical information about the length of the lyrics\n","data_mer['lyrics_len'].describe()"],"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count     771.000000\n","mean      242.632944\n","std       155.973662\n","min        11.000000\n","25%       142.500000\n","50%       204.000000\n","75%       287.500000\n","max      1261.000000\n","Name: lyrics_len, dtype: float64"]},"metadata":{"tags":[]},"execution_count":110}]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"7161ebf7-5eca-46e9-aa19-aafd87f89545","executionInfo":{"status":"ok","timestamp":1574101823796,"user_tz":-60,"elapsed":27707,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"ik0cP8SmVNCG","colab":{"base_uri":"https://localhost:8080/","height":352}},"source":["# Show the histogram of lyrics length\n","plt.figure(figsize=[10, 5])\n","plt.hist(data_mer['lyrics_len'], bins=200)\n","plt.xlabel('lyrics length in data_moody')"],"execution_count":111,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'lyrics length in data_moody')"]},"metadata":{"tags":[]},"execution_count":111},{"output_type":"display_data","data":{"image/png":"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\ne5pW3lvetmr71099+OkkT17Vfsi8d5uJHABg0Ha9hAcAsGUEKACAQQIUAMAgAQoAYJAABQAwSIAC\nABgkQME2VFXfGNz+PlV19vpb7ncfL6yqt8yzj/3s9z6rlq+tqnut85rdVfWrcx5zv79LVT22qn5y\ns8c40Kb63r/VdcDhasf6mwDbWVXt6O6/yPdnql42L8xsUsi/2OgLuvuizCbkPJAem+QbSf7vAT4O\nsA0ZgYJtrKreWVXPXLV8VlU9YxphObeqfjfJBVW1q6qumLa5fVW9saquqKrLquoVU/spVXXl1PbG\ndY67s6rOqapPTI9HT+0nV9XpVfV7VfXZqnrlqtf8h6r6dFV9vKreVVU/V1XPSbI7yVlVdWlV/ci0\n+Suq6pKquryqHrLG8W8bfdnfMfd6zYuq6jNV9SeZfX/cSvvTqurCqvrTqvqdqjqqqnYl+TdJXjPV\n9VNrbbef/jm5qs6sqj+oqs9X1bOr6pem3+dDNft+ylTV46f9XT79Dndcp/34qvpUVV2S5NlT2+2q\n6uqq2rlq+ZqVZeDAEKBgezstsxGcVNXdkvxkkvOmdY9I8pzu/pm9XrMnya4kx3b3T2QWXu6Z5FlJ\nHjq1/ad1jvsrSd7c3f8wyT9N8o5V6x6S5ElJjkvyhqq6Q1WtbPewJE/OLDSlu8/ObCTp+d19bHf/\nzbSPm7v7EUnemuTnNtAPP3TM1Str9mWxv5hZcHpMkmNWrf54kkd198Mz+7Lon+/ua5O8bfodj+3u\nP1hru3VqemBmXzz99CS/keSj3f33k/xNkhOq6k5JzkjyL6b2HUn+7Trtb0/ytCT/IMnfTZLu/t60\n/+dPx31Ckj/r7ps20G/AJglQsI119+9n9uWcO5M8L8k53X3rtPr87v7KGi97QpL/sbLdtM3Xknwz\nyWlV9ewkf73G6/bex1uq6tLMvgz0b1fVEdO687r7W919c2bfcH9UZsHlfd39ze6+Jclvr7P/90w/\nL84s7K1nrWOu9sgkv9fdN3X3t5P81qp190vy4aq6PMm/T/LQfRxjo9ut+GB3fyez71O7fZIPTe2X\nT7/Tg5N8rrs/M7WfmeSn99P+kKn96p59B9dvrDrW6Ul+dnr+4iS/vk5twJwEKNj+3pnkXyV5UWZv\npCv+aqM7mMLUcUnOTvLUfP/Nfl9ul9lozLHT477dvXJj+7dWbffdbO5ey5V9bPT18xzz15K8ZRrt\neWlmX8A7z3Y/UNM0QvSd/v4Xj35vsL51dfcXk9xQVY/L7N/xg4vcP/DDBCjY/s5I8uok6e4rN7D9\n+UleWlU7kqSq7jGNHt2tuz+Q5DWZXWrbn48kecXKQlUdu872f5jkaVV1p+lYT1217pYkd91A3fO4\nMMnPVNU9p8t7/2zVursluW56fuJ+6trXdpv16SS7qurHpuUXJPn9/bR/amp/4NT+vL32947MRqXe\n3d3fXUB9wH4IULDNdfcNSa7Kxi/bvCPJF5JcVlV/luRfZhYU3l9Vl2V2r8+/W2cfr0yye7rh/MrM\nbrjeX42fyOxS32WZjY5cntllw2QWAN+2103kC9Xd1yc5OckfZRbmrlq1+uQk766qi5PcvKr9t5M8\na+Um8v1st9mavpnZqOG7p8uC30vytnXa9yQ5b7qJ/Ma9dnlukiPi8h0cFPX9UWVgO6qqO2cWSB7R\n3V9bb/utUlVHdPc3pno/lmRPd1+y1XUdKqpqd2Y3vf/UVtcChwMjULCNVdUTMhtN+bVlDk+TU6eb\nzi/J7GZ34WlBquqkJOcked1W1wKHCyNQAJtUVS9K8qq9mv+wu1+2FfUAB48ABQAwyCU8AIBBAhQA\nwCABCgBgkAAFADBIgAIAGPT/AZgERnPgkgxoAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 720x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"kFii6BwqYCMU"},"source":["We remove songs with lyrics shorter than a certain length words."]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"01c3c7c3-2b7e-4af8-acc9-e69a59a4b81c","executionInfo":{"status":"ok","timestamp":1574101823798,"user_tz":-60,"elapsed":27696,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"id":"zosOyeWWYCMY","colab":{"base_uri":"https://localhost:8080/","height":170}},"source":["# Remove too short lyrics\n","min_length = 40\n","data_mer = data_mer[data_mer['lyrics_len'] >= min_length]\n","data_mer['lyrics_len'].describe()"],"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count     768.000000\n","mean      243.481771\n","std       155.682414\n","min        53.000000\n","25%       143.000000\n","50%       205.000000\n","75%       288.000000\n","max      1261.000000\n","Name: lyrics_len, dtype: float64"]},"metadata":{"tags":[]},"execution_count":112}]},{"cell_type":"code","metadata":{"id":"_RYB43DSYsSs","colab_type":"code","outputId":"607b8da8-8c27-487f-9aea-fd9555569eb8","executionInfo":{"status":"ok","timestamp":1574101823800,"user_tz":-60,"elapsed":27685,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["data_mer.groupby(by='mood').count()"],"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mer_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","    <tr>\n","      <th>mood</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>angry</th>\n","      <td>205</td>\n","      <td>205</td>\n","      <td>205</td>\n","      <td>205</td>\n","      <td>205</td>\n","      <td>205</td>\n","    </tr>\n","    <tr>\n","      <th>happy</th>\n","      <td>211</td>\n","      <td>211</td>\n","      <td>211</td>\n","      <td>211</td>\n","      <td>211</td>\n","      <td>211</td>\n","    </tr>\n","    <tr>\n","      <th>relaxed</th>\n","      <td>148</td>\n","      <td>148</td>\n","      <td>148</td>\n","      <td>148</td>\n","      <td>148</td>\n","      <td>148</td>\n","    </tr>\n","    <tr>\n","      <th>sad</th>\n","      <td>204</td>\n","      <td>204</td>\n","      <td>204</td>\n","      <td>204</td>\n","      <td>204</td>\n","      <td>204</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         mer_index  artist  title  mood_pn  lyrics  lyrics_len\n","mood                                                          \n","angry          205     205    205      205     205         205\n","happy          211     211    211      211     211         211\n","relaxed        148     148    148      148     148         148\n","sad            204     204    204      204     204         204"]},"metadata":{"tags":[]},"execution_count":113}]},{"cell_type":"markdown","metadata":{"id":"s-Bd6nBEsvWu","colab_type":"text"},"source":["## Save clean data\n","Save datasets so they can be used for NLP with deep learning.\n","\n","We will have 3 files, one for data_moody ('data_moody_clean'), a second one for data_mer ('data_mer_clen') and a final one ('data_lyrics') with both datasets."]},{"cell_type":"code","metadata":{"id":"VlJOEH1lEWIp","colab_type":"code","outputId":"b2a6e1c5-cfb6-4a24-c8ca-d91f22dd7e0d","executionInfo":{"status":"ok","timestamp":1574101823801,"user_tz":-60,"elapsed":27675,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["data_moody.sample()"],"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1172</th>\n","      <td>1173</td>\n","      <td>Morrissey</td>\n","      <td>Let Me Kiss You</td>\n","      <td>sad</td>\n","      <td>neg</td>\n","      <td>There's a place in the sun for anyone, Who has...</td>\n","      <td>125</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      ml_index  ... lyrics_len\n","1172      1173  ...        125\n","\n","[1 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":114}]},{"cell_type":"code","metadata":{"id":"hgkuf4ONEe29","colab_type":"code","outputId":"4b633966-0314-40e5-fb25-39b820e882cf","executionInfo":{"status":"ok","timestamp":1574101823802,"user_tz":-60,"elapsed":27665,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["data_mer.sample()"],"execution_count":115,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mer_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>770</th>\n","      <td>MT0035119161</td>\n","      <td>Elton John</td>\n","      <td>Dixie Lily</td>\n","      <td>relaxed</td>\n","      <td>pos</td>\n","      <td>Showboat coming up the river, See her lanterns...</td>\n","      <td>129</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        mer_index  ... lyrics_len\n","770  MT0035119161  ...        129\n","\n","[1 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":115}]},{"cell_type":"code","metadata":{"id":"Z81O3VKaF7hh","colab_type":"code","outputId":"3d930846-6bbc-4e63-e84e-d8578f9e25d1","executionInfo":{"status":"ok","timestamp":1574101823806,"user_tz":-60,"elapsed":27660,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# We check if there is a song in both datasets\n","data_lyrics = pd.merge(data_moody, data_mer, how='inner', )\n","data_lyrics = data_lyrics[['ml_index', 'mer_index', 'artist', 'title', 'mood', 'mood_pn', 'lyrics', 'lyrics_len', ]]\n","data_lyrics.shape[0]"],"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":116}]},{"cell_type":"markdown","metadata":{"id":"U_pzKJcNh_mq","colab_type":"text"},"source":["There is a song in both datasets. We identify which it is and remove it from one of them"]},{"cell_type":"code","metadata":{"id":"S3nvHsvQbGPB","colab_type":"code","outputId":"978ecdac-ed95-4b2e-a6fc-5742174ac8b9","executionInfo":{"status":"ok","timestamp":1574101823808,"user_tz":-60,"elapsed":27647,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":[" data_lyrics"],"execution_count":117,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>mer_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1358</td>\n","      <td>MT0005241287</td>\n","      <td>Megadeth</td>\n","      <td>Promises</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>Two hearts that shouldn't, Talk to each other ...</td>\n","      <td>237</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   ml_index  ... lyrics_len\n","0      1358  ...        237\n","\n","[1 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":117}]},{"cell_type":"code","metadata":{"id":"alFsQVGzhVsK","colab_type":"code","outputId":"dcc6c545-ca0c-4cd8-ac52-5c0c0b51dbf2","executionInfo":{"status":"ok","timestamp":1574101823809,"user_tz":-60,"elapsed":27634,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["# Show the row in data_moody by ml_index\n","data_moody[data_moody['ml_index']==1358]"],"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1357</th>\n","      <td>1358</td>\n","      <td>Megadeth</td>\n","      <td>Promises</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>Two hearts that shouldn't, Talk to each other ...</td>\n","      <td>237</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      ml_index  ... lyrics_len\n","1357      1358  ...        237\n","\n","[1 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":118}]},{"cell_type":"code","metadata":{"id":"LS1TpLFrhfnQ","colab_type":"code","outputId":"f8172ce7-3d77-437e-9162-f8bde2910597","executionInfo":{"status":"ok","timestamp":1574101823811,"user_tz":-60,"elapsed":27625,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["# Show the row in data_mer by mer_index\n","data_mer[data_mer['mer_index']=='MT0005241287']"],"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mer_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>395</th>\n","      <td>MT0005241287</td>\n","      <td>Megadeth</td>\n","      <td>Promises</td>\n","      <td>angry</td>\n","      <td>neg</td>\n","      <td>Two hearts that shouldn't, Talk to each other ...</td>\n","      <td>237</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        mer_index  ... lyrics_len\n","395  MT0005241287  ...        237\n","\n","[1 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":119}]},{"cell_type":"code","metadata":{"id":"UhO8rD49ih48","colab_type":"code","outputId":"20318550-172c-4d3e-af56-551c8296fe3a","executionInfo":{"status":"ok","timestamp":1574101824031,"user_tz":-60,"elapsed":27836,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# We drop the song in data_mer and finally merge the datasets\n","data_mer = data_mer.drop([395], axis=0)\n","data_lyrics = pd.merge(data_moody, data_mer, how='outer', )\n","data_lyrics = data_lyrics[['ml_index', 'mer_index', 'artist', 'title', 'mood', 'mood_pn', 'lyrics', 'lyrics_len', ]]\n","print(f'Total number of songs is {data_lyrics.shape[0]}')\n"],"execution_count":120,"outputs":[{"output_type":"stream","text":["Total number of songs is 2574\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"D7-MSAVVaG8I","colab_type":"code","outputId":"5bfa139d-90ce-454c-cb88-2e92ea3d0854","executionInfo":{"status":"ok","timestamp":1574101824032,"user_tz":-60,"elapsed":27828,"user":{"displayName":"David Gamez","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBjsA_gYEDHi9ux-p71dKvLPIOW5TXoUvooG7CD=s64","userId":"11264671661894060339"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["data_lyrics.groupby(by='mood').count()"],"execution_count":121,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ml_index</th>\n","      <th>mer_index</th>\n","      <th>artist</th>\n","      <th>title</th>\n","      <th>mood_pn</th>\n","      <th>lyrics</th>\n","      <th>lyrics_len</th>\n","    </tr>\n","    <tr>\n","      <th>mood</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>angry</th>\n","      <td>468</td>\n","      <td>204</td>\n","      <td>672</td>\n","      <td>672</td>\n","      <td>672</td>\n","      <td>672</td>\n","      <td>672</td>\n","    </tr>\n","    <tr>\n","      <th>happy</th>\n","      <td>456</td>\n","      <td>211</td>\n","      <td>667</td>\n","      <td>667</td>\n","      <td>667</td>\n","      <td>667</td>\n","      <td>667</td>\n","    </tr>\n","    <tr>\n","      <th>relaxed</th>\n","      <td>440</td>\n","      <td>148</td>\n","      <td>588</td>\n","      <td>588</td>\n","      <td>588</td>\n","      <td>588</td>\n","      <td>588</td>\n","    </tr>\n","    <tr>\n","      <th>sad</th>\n","      <td>443</td>\n","      <td>204</td>\n","      <td>647</td>\n","      <td>647</td>\n","      <td>647</td>\n","      <td>647</td>\n","      <td>647</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         ml_index  mer_index  artist  title  mood_pn  lyrics  lyrics_len\n","mood                                                                    \n","angry         468        204     672    672      672     672         672\n","happy         456        211     667    667      667     667         667\n","relaxed       440        148     588    588      588     588         588\n","sad           443        204     647    647      647     647         647"]},"metadata":{"tags":[]},"execution_count":121}]},{"cell_type":"code","metadata":{"id":"O2_V_JQ5tBuh","colab_type":"code","colab":{}},"source":["# Saving\n","data_moody.to_pickle('/content/drive/My Drive/Fall 2019/W266/Project/2_clean_data/data_moody_clean.pkl')\n","data_mer.to_pickle('/content/drive/My Drive/Fall 2019/W266/Project/2_clean_data/data_mer_clean.pkl')\n","data_lyrics.to_pickle('/content/drive/My Drive/Fall 2019/W266/Project/2_clean_data/data_lyrics_clean.pkl')"],"execution_count":0,"outputs":[]}]}